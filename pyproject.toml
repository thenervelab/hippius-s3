[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hippius-s3"
version = "0.0.2"
description = "S3 Gateway for Hippius' IPFS storage"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "eatmyveggies", email = "radu@corcel.io"},
]
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.23.0",
    "asyncpg>=0.28.0",
    "pydantic>=2.3.0",
    "python-dotenv>=1.0.0",
    "hippius>=0.2.3",
    "httpx>=0.27.0",
    "aiofiles>=23.1.0",
    "lxml>=4.9.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "pre-commit>=3.5.0",
    "minio>=7.1.15",
]

[tool.hatch.build.targets.wheel]
packages = ["hippius_s3"]

[tool.ruff]
exclude        = ["tests", ".git", "__pycache__", ".mypy_cache", ".pytest_cache", "tasks.py", "examples"]
line-length    = 120
src            = ["hippius_s3", "tests"]
target-version = "py310"

[tool.ruff.lint]
ignore = [
    "B008",   # do not perform function calls in argument defaults (pydantic.Field(...))
    "ERA001", # code commented out
    "G004",   # logging statement uses f-string
    "TRY400", # use logging.exception instead of logging.error
    "C901",   # function too complex
    "E501",   # line too long
]
select = [
    "F",        # pyflakes
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "C90",      # maccbe
    "I",        # isort
    "ASYNC",    # flake8-async
    "B",        # flake8-bugbear
    "C4",       # flake8-comprehensions
    "DTZ",      # flake8-datetimetz
    "T10",      # flake8-debugger
    "FA",       # flake8-future-annotations
    "T20",      # flake8-print
    "Q",        # flake8-quotes
    "SIM",      # flake8-simplify
    "PTH",      # flake8-use-pathlib
    "ERA",      # eradicate
    "RET",
    "PERF",     # perflint
    "TID",      # flake8-tidy-imports
]

[tool.ruff.lint.isort]
force-single-line   = true
known-local-folder  = ["hippius_s3"]
lines-after-imports = 2

[tool.ruff.lint.mccabe]
max-complexity = 13 # TODO: get this down to 8

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"examples/*.py" = ["T201", "PTH"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = [
    "pydantic.mypy"
]
# Ignore errors in specific modules
[[tool.mypy.overrides]]
module = "hippius_s3.api.s3.multipart"
disallow_untyped_defs = false
disable_error_code = ["attr-defined", "no-untyped-def", "misc", "return-value"]

[[tool.mypy.overrides]]
module = "hippius_s3.api.s3.endpoints"
disallow_untyped_defs = false
disable_error_code = ["attr-defined", "no-untyped-def", "var-annotated", "misc", "assignment", "return"]

[[tool.mypy.overrides]]
module = "aiofiles.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asyncpg.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lxml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "hippius_sdk.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=hippius_s3"
