[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hippius-s3"
version = "0.0.2"
description = "S3 Gateway for Hippius' IPFS storage"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "eatmyveggies", email = "veggies@hippius.com"},
]
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.23.0",
    "gunicorn>=21.2.0",
    "asyncpg>=0.28.0",
    "pydantic>=2.3.0",
    "python-dotenv>=1.0.0",
    "hippius",
    "httpx>=0.27.0",
    "aiofiles>=23.1.0",
    "lxml>=4.9.3",
    "botocore>=1.38.25",
    "hippius[key_storage]>=0.2.57",
    "cachetools",
    "redis",
    "pyinstrument>=4.0.0",
    "PyNaCl>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.12.0",
    "mypy>=1.8.0",
    "pre-commit>=3.5.0",
    "minio>=7.1.15",
    "boto3>=1.34.0",
    "types-boto3",
    "types-botocore",
    "requests>=2.31.0",
]

[tool.hatch.build.targets.wheel]
packages = ["hippius_s3"]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = ["examples/"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "F",        # pyflakes
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "C90",      # maccbe
    "I",        # isort
    "ASYNC",    # flake8-async
    "B",        # flake8-bugbear
    "C4",       # flake8-comprehensions
    "DTZ",      # flake8-datetimetz
    "T10",      # flake8-debugger
    "FA",       # flake8-future-annotations
    "T20",      # flake8-print
    "Q",        # flake8-quotes
    "SIM",      # flake8-simplify
    "PTH",      # flake8-use-pathlib
    "ERA",      # eradicate
    "RET",
    "PERF",     # perflint
    "TID",      # flake8-tidy-imports
]
ignore = [
    "C901", # Too complex functions
    "E722", # Bare except clauses
    "E501", # Line too long (let formatter handle this)
    "B008",
]


[tool.ruff.lint.isort]
force-single-line   = true
known-first-party = ["hippius_s3"]
known-third-party = ["hippius_sdk", "hippius"]
lines-after-imports = 2

[tool.ruff.lint.mccabe]
max-complexity = 13 # TODO: get this down to 8

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"examples/*.py" = ["T201", "PTH"]
"tests/**/*.py" = ["T201", "ERA001"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = [
    "pydantic.mypy"
]
# Ignore errors in specific modules
[[tool.mypy.overrides]]
module = "hippius_s3.api.s3.multipart"
disallow_untyped_defs = false
disable_error_code = ["attr-defined", "no-untyped-def", "misc", "return-value"]

[[tool.mypy.overrides]]
module = "hippius_s3.api.s3.endpoints"
disallow_untyped_defs = false
disable_error_code = ["attr-defined", "no-untyped-def", "var-annotated", "misc", "assignment", "return", "call-arg", "union-attr", "index", "no-any-return"]

[[tool.mypy.overrides]]
module = "hippius_s3.queue"
disallow_untyped_defs = false
disable_error_code = ["no-untyped-def", "misc", "arg-type"]

[[tool.mypy.overrides]]
module = "hippius_s3.utils"
disallow_untyped_defs = false
disable_error_code = ["var-annotated", "no-untyped-def", "no-any-return"]

[[tool.mypy.overrides]]
module = "hippius_s3.ipfs_service"
disallow_untyped_defs = false
disable_error_code = ["no-untyped-def"]

[[tool.mypy.overrides]]
module = "hippius_s3.api.middlewares.profiler"
disallow_untyped_defs = false
disable_error_code = ["attr-defined", "no-untyped-def"]

[[tool.mypy.overrides]]
module = "hippius_s3.dependencies"
disallow_untyped_defs = false
disable_error_code = ["no-untyped-def"]

[[tool.mypy.overrides]]
module = "hippius_s3.api.user"
disallow_untyped_defs = false
disable_error_code = ["no-untyped-def"]

[[tool.mypy.overrides]]
module = "hippius_s3.api.middlewares.credit_check"
disallow_untyped_defs = false
disable_error_code = ["no-untyped-def", "no-any-return"]

[[tool.mypy.overrides]]
module = "hippius_s3.main"
disallow_untyped_defs = false
disable_error_code = ["no-untyped-def"]

[[tool.mypy.overrides]]
module = "aiofiles.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asyncpg.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lxml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "hippius_sdk.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cachetools.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "redis.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mnemonic.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=hippius_s3"
