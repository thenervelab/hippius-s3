services:
  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: hippius-loki
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - hippius_net

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: hippius-promtail
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - hippius_net
    depends_on:
      - loki

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: hippius-prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
      - "--web.enable-remote-write-receiver"
    restart: unless-stopped
    networks:
      - hippius_net
    depends_on:
      - otel-collector

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: hippius-grafana
    ports:
      - "${HOST_BIND_IP:-127.0.0.1}:3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL:-https://discord.com/api/webhooks/dummy}
    restart: unless-stopped
    networks:
      - hippius_net
    depends_on:
      - prometheus

  # OpenTelemetry Collector for metrics collection
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: hippius-otel-collector
    command: ["--config=/etc/otelcol-contrib/otel-config.yml"]
    ports:
      - "127.0.0.1:1888:1888" # pprof extension
      - "127.0.0.1:8888:8888" # Prometheus metrics exposed by the collector
      - "127.0.0.1:8889:8889" # Prometheus exporter metrics
      - "127.0.0.1:13133:13133" # health_check extension
      - "127.0.0.1:4317:4317" # OTLP gRPC receiver
      - "127.0.0.1:4318:4318" # OTLP HTTP receiver
      - "127.0.0.1:55679:55679" # zpages extension
    volumes:
      - ./monitoring/otel/otel-config.yml:/etc/otelcol-contrib/otel-config.yml:ro
    restart: unless-stopped
    networks:
      - hippius_net

  # Redis exporter for main Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:v1.76.0
    container_name: hippius-redis-exporter
    ports:
      - "127.0.0.1:9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    command:
      ["/redis_exporter", "-redis.addr=redis://redis:6379", "-log-format=txt"]
    restart: unless-stopped
    networks:
      - hippius_net

  # Redis exporter for accounts cache
  redis-accounts-exporter:
    image: oliver006/redis_exporter:v1.76.0
    container_name: hippius-redis-accounts-exporter
    ports:
      - "127.0.0.1:9122:9121"
    environment:
      - REDIS_ADDR=redis://redis-accounts:6379
    command:
      [
        "/redis_exporter",
        "-redis.addr=redis://redis-accounts:6379",
        "-log-format=txt",
      ]
    restart: unless-stopped
    networks:
      - hippius_net

  # Redis exporter for chain cache
  redis-chain-exporter:
    image: oliver006/redis_exporter:v1.76.0
    container_name: hippius-redis-chain-exporter
    ports:
      - "127.0.0.1:9123:9121"
    environment:
      - REDIS_ADDR=redis://redis-chain:6379
    command:
      [
        "/redis_exporter",
        "-redis.addr=redis://redis-chain:6379",
        "-log-format=txt",
      ]
    restart: unless-stopped
    networks:
      - hippius_net

  # Postgres exporter for database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: hippius-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@db:5432/hippius?sslmode=disable
    restart: unless-stopped
    networks:
      - hippius_net

  # Tempo for distributed tracing
  tempo:
    image: grafana/tempo:latest
    container_name: hippius-tempo
    command: ["-config.file=/etc/tempo.yaml"]
    user: "0:0"
    ports:
      - "127.0.0.1:3200:3200" # tempo
      - "127.0.0.1:4319:4317" # otlp grpc (using 4319 to avoid conflict with otel-collector)
      - "127.0.0.1:4320:4318" # otlp http (using 4320 to avoid conflict with otel-collector)
    volumes:
      - ./monitoring/tempo/tempo.yaml:/etc/tempo.yaml:ro
      - tempo_data:/tmp/tempo
    restart: unless-stopped
    networks:
      - hippius_net

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data:

networks:
  hippius_net:
    name: hippius_net
