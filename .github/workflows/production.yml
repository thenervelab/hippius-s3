name: Deploy to Production

on:
  push:
    branches: [ production ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.DEPLOYMENT_SSH_KEY }}

    - name: Setup known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.DEPLOYMENT_IP }} >> ~/.ssh/known_hosts

    - name: Deploy to production
      env:
        DEPLOYMENT_IP: ${{ secrets.DEPLOYMENT_IP }}
        DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
        DEPLOYMENT_PATH: ${{ secrets.DEPLOYMENT_PATH }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        cat > deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        echo "Deploying Hippius-S3 to production server..."
        cd $DEPLOYMENT_PATH || { echo "Deployment path does not exist"; exit 1; }
        echo "Updating git repository..."
        git pull || { echo "Failed to pull latest changes"; exit 1; }
        echo "Creating .env file..."
        cat > .env << ENVEOF
        DATABASE_URL=${DATABASE_URL}
        DEBUG=false
        ENVEOF
        echo "Building and starting Docker containers..."
        docker compose down
        docker compose build --no-cache
        docker compose up -d
        echo "Waiting for database to be ready..."
        sleep 10
        echo "Running database migrations"
        docker compose exec -T api dbmate up
        echo "Deployment completed successfully!"
        EOF
        chmod +x deploy.sh
        scp deploy.sh ${DEPLOYMENT_USER}@${DEPLOYMENT_IP}:/tmp/deploy.sh
        ssh ${DEPLOYMENT_USER}@${DEPLOYMENT_IP} "DEPLOYMENT_PATH=${DEPLOYMENT_PATH} DATABASE_URL=${DATABASE_URL} bash /tmp/deploy.sh"
        ssh ${DEPLOYMENT_USER}@${DEPLOYMENT_IP} "rm /tmp/deploy.sh"

    - name: Verify deployment
      env:
        DEPLOYMENT_IP: ${{ secrets.DEPLOYMENT_IP }}
        DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
        DEPLOYMENT_PATH: ${{ secrets.DEPLOYMENT_PATH }}
      run: |
        ssh ${DEPLOYMENT_USER}@${DEPLOYMENT_IP} "cd ${DEPLOYMENT_PATH} && docker compose ps"
