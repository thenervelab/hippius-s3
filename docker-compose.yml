services:
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - ipfs
      - redis
      - redis-accounts
    volumes:
      - .:/app
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - UVICORN_LOG_LEVEL=debug
      - DEBUG=true
      - HIPPIUS_IPFS_GET_URL=https://get.hippius.network
      - HIPPIUS_IPFS_STORE_URL=https://store.hippius.network
      - REDIS_URL=redis://redis:6379/0
      - REDIS_ACCOUNTS_URL=redis://redis-accounts:6379/0

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hippius
    ports:
      - "127.0.0.1:5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  ipfs:
    image: ipfs/kubo:latest
    ports:
      - "4001:4001" # IPFS swarm port
      - "5001:5001" # IPFS API port
      - "8080:8080" # IPFS gateway port
    volumes:
      - ipfs_data:/data/ipfs
    restart: unless-stopped
    environment:
      - IPFS_PROFILE=server
    healthcheck:
      test: ["CMD-SHELL", "ipfs id"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-accounts:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6380:6379"
    volumes:
      - redis_accounts_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  pinner:
    build:
      context: .
      dockerfile: pinner/Dockerfile
    command: ["python", "pinner/run_pinner_in_loop.py"]
    env_file:
      - .env
    depends_on:
      - redis
    deploy:
      replicas: 1 # can't scale up otherwise we get transaction conflicts for the same user
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - REDIS_ACCOUNTS_URL=redis://redis-accounts:6379/0

  unpinner:
    build:
      context: .
      dockerfile: pinner/Dockerfile
    command: ["python", "pinner/run_unpinner_in_loop.py"]
    env_file:
      - .env
    depends_on:
      - redis
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - REDIS_ACCOUNTS_URL=redis://redis-accounts:6379/0

  downloader:
    build:
      context: .
      dockerfile: pinner/Dockerfile
    command: ["python", "run_downloader_in_loop.py"]
    env_file:
      - .env
    depends_on:
      - redis
      - db
    deploy:
      replicas: 3
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0

volumes:
  postgres_data:
  ipfs_data:
  redis_data:
  redis_accounts_data:
