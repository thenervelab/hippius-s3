services:
  base:
    image: hippius-s3-base:latest
    profiles:
      - build-base
    build:
      context: .
      dockerfile: Dockerfile.base

  api:
    build:
      context: .
    ports:
      - "${HOST_BIND_IP:-127.0.0.1}:8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      ipfs:
        condition: service_started
      redis:
        condition: service_healthy
      redis-accounts:
        condition: service_healthy
      redis-chain:
        condition: service_healthy
    volumes:
      - .:/app
      - /var/lib/hippius/dlq:/tmp/hippius_dlq
      - /var/lib/hippius/dlq_archive:/tmp/hippius_dlq_archive
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=true
      - REDIS_URL=redis://redis:6379/0
      - REDIS_ACCOUNTS_URL=redis://redis-accounts:6379/0
      - REDIS_CHAIN_URL=redis://redis-chain:6379/0
      - HIPPIUS_DLQ_DIR=/tmp/hippius_dlq
      - HIPPIUS_DLQ_ARCHIVE_DIR=/tmp/hippius_dlq_archive
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - ASGI_SERVER=uvicorn
      - ASGI_WORKERS=1
    networks:
      - hippius_net

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hippius
    ports:
      - "127.0.0.1:5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hippius_net

  ipfs:
    image: ipfs/kubo:latest
    ports:
      - "4001:4001" # IPFS swarm port
      - "5001:5001" # IPFS API port
      - "8080:8080" # IPFS gateway port
    volumes:
      - ipfs_data:/data/ipfs
    restart: unless-stopped
    environment:
      - IPFS_PROFILE=server
    healthcheck:
      test: ["CMD-SHELL", "ipfs id"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - hippius_net

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - hippius_net

  redis-accounts:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6380:6379"
    volumes:
      - redis_accounts_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - hippius_net

  redis-chain:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6381:6379"
    volumes:
      - redis_chain_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - hippius_net

  uploader:
    build:
      context: .
      dockerfile: workers/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - REDIS_ACCOUNTS_URL=redis://redis-accounts:6379/0
      - HIPPIUS_DLQ_DIR=/tmp/hippius_dlq
      - HIPPIUS_DLQ_ARCHIVE_DIR=/tmp/hippius_dlq_archive
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - WORKER_SCRIPT=workers/run_uploader_in_loop.py
      - ENABLE_WATCHFILES=true
    volumes:
      - .:/app
      - /var/lib/hippius/dlq:/tmp/hippius_dlq
      - /var/lib/hippius/dlq_archive:/tmp/hippius_dlq_archive
    networks:
      - hippius_net

  substrate:
    build:
      context: .
      dockerfile: workers/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - WORKER_SCRIPT=workers/run_substrate_in_loop.py
      - ENABLE_WATCHFILES=true
    volumes:
      - .:/app
    networks:
      - hippius_net

  unpinner:
    build:
      context: .
      dockerfile: workers/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - REDIS_ACCOUNTS_URL=redis://redis-accounts:6379/0
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - WORKER_SCRIPT=workers/run_unpinner_in_loop.py
      - ENABLE_WATCHFILES=true
    networks:
      - hippius_net

  downloader:
    build:
      context: .
      dockerfile: workers/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - WORKER_SCRIPT=workers/run_downloader_in_loop.py
      - ENABLE_WATCHFILES=true
    networks:
      - hippius_net

  chain-pin-checker:
    build:
      context: .
      dockerfile: workers/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis-chain:
        condition: service_healthy
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_CHAIN_URL=redis://redis-chain:6379/0
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - WORKER_SCRIPT=workers/chain_pin_checker.py
      - ENABLE_WATCHFILES=true
    networks:
      - hippius_net

  chain-profile-cacher:
    build:
      context: .
      dockerfile: workers/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis-chain:
        condition: service_healthy
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_CHAIN_URL=redis://redis-chain:6379/0
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOKI_ENABLED=false
      - WORKER_SCRIPT=workers/chain_profile_cacher.py
      - ENABLE_WATCHFILES=true
    networks:
      - hippius_net

volumes:
  postgres_data:
  ipfs_data:
  redis_data:
  redis_accounts_data:
  redis_chain_data:

networks:
  hippius_net:
    external: true
    name: hippius_net
